{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/context/rp-user/RPUser.provider.tsx\";\nimport { rpUserContext } from './RPUser';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { sessionContext } from '@instinct-web/core';\nimport { rpSessionService } from '../../services/session';\nexport function RPUserContextProvider({\n  children\n}) {\n  const {\n    user\n  } = useContext(sessionContext);\n  const [rpUser, setRPUser] = useState(undefined);\n  useEffect(() => {\n    if ((user === null || user === void 0 ? void 0 : user.id) === undefined) {\n      setRPUser(undefined);\n    }\n\n    async function fetchLatestRPUser() {\n      const response = await rpSessionService.getRPUser();\n      setRPUser(response);\n    }\n\n    fetchLatestRPUser();\n  }, [user === null || user === void 0 ? void 0 : user.id]);\n\n  function updateRPUser(changes) {\n    setRPUser(_ => {\n      if (!changes) return undefined;\n      return { ..._,\n        ...changes\n      };\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(rpUserContext.Provider, {\n    value: {\n      rpUser: rpUser,\n      setRPUser: updateRPUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, children);\n}","map":null,"metadata":{},"sourceType":"module"}