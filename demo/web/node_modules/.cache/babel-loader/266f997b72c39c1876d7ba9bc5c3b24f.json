{"ast":null,"code":"import _regeneratorRuntime from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormGroup}from'reactstrap';import React,{useState}from'react';import{Icon,Input,Select}from'@instinct-web/core';import{Card}from'../../../../components/generic/card/Card';import{PoliticalIdeology}from'@instinct-plugin/roleplay-types';import{BadgeSelectorModal}from'../../../../components/templates/badge-selector-modal';var PARTY_TYPES=[{value:PoliticalIdeology.Leftist,label:'Leftist'},{value:PoliticalIdeology.Center,label:'Center'},{value:PoliticalIdeology.Rightist,label:'Rightist'},{value:PoliticalIdeology.Other,label:'Other'}];export function EditPoliticalParty(_ref){var _basePoliticalPartyDT,_basePoliticalPartyDT2,_basePoliticalPartyDT3,_basePoliticalPartyDT4,_basePoliticalPartyDT5,_PARTY_TYPES$find;var basePoliticalPartyDTO=_ref.basePoliticalPartyDTO,onSubmit=_ref.onSubmit;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),spinner=_useState2[0],setSpinner=_useState2[1];var _useState3=useState({name:(_basePoliticalPartyDT=basePoliticalPartyDTO===null||basePoliticalPartyDTO===void 0?void 0:basePoliticalPartyDTO.name)!==null&&_basePoliticalPartyDT!==void 0?_basePoliticalPartyDT:'',description:(_basePoliticalPartyDT2=basePoliticalPartyDTO===null||basePoliticalPartyDTO===void 0?void 0:basePoliticalPartyDTO.description)!==null&&_basePoliticalPartyDT2!==void 0?_basePoliticalPartyDT2:'',about:(_basePoliticalPartyDT3=basePoliticalPartyDTO===null||basePoliticalPartyDTO===void 0?void 0:basePoliticalPartyDTO.about)!==null&&_basePoliticalPartyDT3!==void 0?_basePoliticalPartyDT3:'',badge:(_basePoliticalPartyDT4=basePoliticalPartyDTO===null||basePoliticalPartyDTO===void 0?void 0:basePoliticalPartyDTO.badge)!==null&&_basePoliticalPartyDT4!==void 0?_basePoliticalPartyDT4:'BR248',ideology:(_basePoliticalPartyDT5=basePoliticalPartyDTO===null||basePoliticalPartyDTO===void 0?void 0:basePoliticalPartyDTO.ideology)!==null&&_basePoliticalPartyDT5!==void 0?_basePoliticalPartyDT5:PoliticalIdeology.Center}),_useState4=_slicedToArray(_useState3,2),politicalPartyDTO=_useState4[0],setPoliticalPartyDTO=_useState4[1];function updatePoliticalParty(key,value){setPoliticalPartyDTO(function(_){return _objectSpread(_objectSpread({},_),{},_defineProperty({},key,value));});}function onConfirm(){return _onConfirm.apply(this,arguments);}function _onConfirm(){_onConfirm=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setSpinner(true);_context.next=4;return onSubmit(politicalPartyDTO);case 4:_context.prev=4;setSpinner(false);return _context.finish(4);case 7:case\"end\":return _context.stop();}}},_callee,null,[[0,,4,7]]);}));return _onConfirm.apply(this,arguments);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(Card,{header:\"Bill Details\"},/*#__PURE__*/React.createElement(FormGroup,{className:\"mt-2\",style:{padding:2}},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-8\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Party Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"name\",onChange:updatePoliticalParty,value:politicalPartyDTO.name})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-4\"},/*#__PURE__*/React.createElement(BadgeSelectorModal,{badge:politicalPartyDTO.badge,onChange:function onChange(newBadge){return updatePoliticalParty('badge',newBadge);}})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-2\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Party Description\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",onChange:function onChange(e){return updatePoliticalParty('description',e.target.value);},value:politicalPartyDTO.description,rows:4,style:{width:'100%'}})),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-2\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Party About\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",onChange:function onChange(e){return updatePoliticalParty('about',e.target.value);},value:politicalPartyDTO.about,rows:10,style:{width:'100%'}})),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-2\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Party Ideology\"),/*#__PURE__*/React.createElement(Select,{options:PARTY_TYPES,value:(_PARTY_TYPES$find=PARTY_TYPES.find(function(_){return _.value===politicalPartyDTO.ideology;}))!==null&&_PARTY_TYPES$find!==void 0?_PARTY_TYPES$find:null,onChange:function onChange(_){return updatePoliticalParty('ideology',_.value);}})),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-2 text-right\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-outline-success ml-2\",onClick:onConfirm,disabled:spinner},spinner?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Icon,{className:\"fa-spin\",type:\"spinner\"}),\" Saving Changes...\"):'Save Changes')))));}","map":{"version":3,"sources":["/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/pages/government/parties/edit-party/EditParty.tsx"],"names":["FormGroup","React","useState","Icon","Input","Select","Card","PoliticalIdeology","BadgeSelectorModal","PARTY_TYPES","value","Leftist","label","Center","Rightist","Other","EditPoliticalParty","basePoliticalPartyDTO","onSubmit","spinner","setSpinner","name","description","about","badge","ideology","politicalPartyDTO","setPoliticalPartyDTO","updatePoliticalParty","key","_","onConfirm","padding","newBadge","e","target","width","find"],"mappings":"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","sourcesContent":["import {FormGroup} from 'reactstrap';\nimport React, {useState} from 'react';\nimport {Icon, Input, Select} from '@instinct-web/core';\nimport {Card} from '../../../../components/generic/card/Card';\nimport {EditPoliticalPartyProps} from './EditParty.types';\nimport {\n  PoliticalIdeology,\n  PoliticalPartyDTO,\n} from '@instinct-plugin/roleplay-types';\nimport {BadgeSelectorModal} from '../../../../components/templates/badge-selector-modal';\n\nconst PARTY_TYPES = [\n  {\n    value: PoliticalIdeology.Leftist,\n    label: 'Leftist',\n  },\n  {\n    value: PoliticalIdeology.Center,\n    label: 'Center',\n  },\n  {\n    value: PoliticalIdeology.Rightist,\n    label: 'Rightist',\n  },\n  {\n    value: PoliticalIdeology.Other,\n    label: 'Other',\n  },\n];\n\nexport function EditPoliticalParty({\n  basePoliticalPartyDTO,\n  onSubmit,\n}: EditPoliticalPartyProps) {\n  const [spinner, setSpinner] = useState(false);\n  const [politicalPartyDTO, setPoliticalPartyDTO] = useState<PoliticalPartyDTO>(\n    {\n      name: basePoliticalPartyDTO?.name ?? '',\n      description: basePoliticalPartyDTO?.description ?? '',\n      about: basePoliticalPartyDTO?.about ?? '',\n      badge: basePoliticalPartyDTO?.badge ?? 'BR248',\n      ideology: basePoliticalPartyDTO?.ideology ?? PoliticalIdeology.Center,\n    }\n  );\n\n  function updatePoliticalParty<K extends keyof PoliticalPartyDTO>(\n    key: K,\n    value: PoliticalPartyDTO[K]\n  ): void {\n    setPoliticalPartyDTO(_ => ({\n      ..._,\n      [key]: value,\n    }));\n  }\n\n  async function onConfirm() {\n    try {\n      setSpinner(true);\n      await onSubmit(politicalPartyDTO);\n    } finally {\n      setSpinner(false);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"col-12\">\n        <Card header=\"Bill Details\">\n          <FormGroup className=\"mt-2\" style={{padding: 2}}>\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <h4>Party Name</h4>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  onChange={updatePoliticalParty}\n                  value={politicalPartyDTO.name}\n                />\n              </div>\n              <div className=\"col-4\">\n                <BadgeSelectorModal\n                  badge={politicalPartyDTO.badge}\n                  onChange={newBadge => updatePoliticalParty('badge', newBadge)}\n                />\n              </div>\n            </div>\n          </FormGroup>\n          <FormGroup className=\"mb-2\">\n            <h4>Party Description</h4>\n            <textarea\n              className=\"form-control\"\n              onChange={e =>\n                updatePoliticalParty('description', e.target.value)\n              }\n              value={politicalPartyDTO.description}\n              rows={4}\n              style={{width: '100%'}}\n            />\n          </FormGroup>\n          <FormGroup className=\"mb-2\">\n            <h4>Party About</h4>\n            <textarea\n              className=\"form-control\"\n              onChange={e => updatePoliticalParty('about', e.target.value)}\n              value={politicalPartyDTO.about}\n              rows={10}\n              style={{width: '100%'}}\n            />\n          </FormGroup>\n          <FormGroup className=\"mb-2\">\n            <h4>Party Ideology</h4>\n            <Select\n              options={PARTY_TYPES}\n              value={\n                PARTY_TYPES.find(_ => _.value === politicalPartyDTO.ideology) ??\n                null\n              }\n              onChange={(_: any) => updatePoliticalParty('ideology', _.value)}\n            />\n          </FormGroup>\n          <FormGroup className=\"mb-2 text-right\">\n            <button\n              className=\"btn btn-outline-success ml-2\"\n              onClick={onConfirm}\n              disabled={spinner}\n            >\n              {spinner ? (\n                <>\n                  <Icon className=\"fa-spin\" type=\"spinner\" /> Saving Changes...\n                </>\n              ) : (\n                'Save Changes'\n              )}\n            </button>\n          </FormGroup>\n        </Card>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}