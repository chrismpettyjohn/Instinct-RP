{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/context/web-socket/WebSocket.provider.tsx\";\nimport { webSocketContext } from './WebSocket';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { WebSocketService } from '../../services/web-socket';\nimport { configContext, sessionContext } from '@instinct-prj/frontend';\nexport function WebSocketContextProvider({\n  children\n}) {\n  const {\n    sso\n  } = useContext(sessionContext);\n  const {\n    config\n  } = useContext(configContext);\n  const [connection, setConnection] = useState();\n  useEffect(() => {\n    if (sso && config.websocketEnabled) {\n      setConnection(new WebSocketService(config.websocketIP, config.websocketPort, sso));\n    }\n  }, [sso]);\n\n  function onEvent(event, callback) {\n    if (config.websocketEnabled) {\n      connection.addSubscriber(event, callback);\n    }\n  }\n\n  function sendEvent(event, data) {\n    if (!config.websocketEnabled) {\n      return;\n    }\n\n    if (!connection) {\n      throw new Error('Web Socket connection has not been started');\n    }\n\n    connection.sendEvent(event, data);\n  }\n\n  function retry() {\n    if (!config.websocketEnabled) {\n      return;\n    }\n\n    if (connection) {\n      connection.retry();\n      return;\n    }\n\n    if (sso) {\n      setConnection(new WebSocketService(config.websocketIP, config.websocketPort, sso));\n    }\n  }\n\n  function getConnectionStatus() {\n    if (!config.websocketEnabled) {\n      return false;\n    }\n\n    return (connection === null || connection === void 0 ? void 0 : connection.getConnectionStatus()) === true;\n  }\n\n  return /*#__PURE__*/React.createElement(webSocketContext.Provider, {\n    value: {\n      onEvent,\n      sendEvent,\n      getConnectionStatus,\n      retry\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, children);\n}","map":null,"metadata":{},"sourceType":"module"}