{"ast":null,"code":"import _regeneratorRuntime from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{backendAPI}from'@instinct-web/core';export var GangServiceImplementation=/*#__PURE__*/function(){function GangServiceImplementation(){_classCallCheck(this,GangServiceImplementation);}_createClass(GangServiceImplementation,[{key:\"getAll\",value:function(){var _getAll=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var gangs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return backendAPI.get('gangs');case 2:gangs=_context.sent;return _context.abrupt(\"return\",gangs.data);case 4:case\"end\":return _context.stop();}}},_callee);}));function getAll(){return _getAll.apply(this,arguments);}return getAll;}()},{key:\"getByID\",value:function(){var _getByID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(gangID){var gang;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return backendAPI.get(\"gangs/\".concat(gangID));case 2:gang=_context2.sent;return _context2.abrupt(\"return\",gang.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function getByID(_x){return _getByID.apply(this,arguments);}return getByID;}()}]);return GangServiceImplementation;}();","map":{"version":3,"sources":["/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/services/gang/Gang.ts"],"names":["backendAPI","GangServiceImplementation","get","gangs","data","gangID","gang"],"mappings":"+kBAGA,OAAQA,UAAR,KAAyB,oBAAzB,CAEA,UAAaC,CAAAA,yBAAb,0PACE,mKAC6CD,CAAAA,UAAU,CAACE,GAAX,CAAe,OAAf,CAD7C,QACQC,KADR,+CAESA,KAAK,CAACC,IAFf,wDADF,mLAME,kBAAcC,MAAd,sJAC0CL,CAAAA,UAAU,CAACE,GAAX,iBAAwBG,MAAxB,EAD1C,QACQC,IADR,iDAESA,IAAI,CAACF,IAFd,0DANF","sourcesContent":["import {AxiosResponse} from 'axios';\nimport {GangService} from './Gang.types';\nimport {Gang} from '@instinct-plugin/roleplay-types';\nimport {backendAPI} from '@instinct-web/core';\n\nexport class GangServiceImplementation implements GangService {\n  async getAll() {\n    const gangs: AxiosResponse<Gang[]> = await backendAPI.get('gangs');\n    return gangs.data;\n  }\n\n  async getByID(gangID: string) {\n    const gang: AxiosResponse<Gang> = await backendAPI.get(`gangs/${gangID}`);\n    return gang.data;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}