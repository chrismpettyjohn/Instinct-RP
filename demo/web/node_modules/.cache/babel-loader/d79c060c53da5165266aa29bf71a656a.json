{"ast":null,"code":"import _regeneratorRuntime from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{backendAPI}from'@instinct-web/core';export var PoliticalPartyServiceImplementation=/*#__PURE__*/function(){function PoliticalPartyServiceImplementation(){_classCallCheck(this,PoliticalPartyServiceImplementation);}_createClass(PoliticalPartyServiceImplementation,[{key:\"getAll\",value:function(){var _getAll=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var politicalParties;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return backendAPI.get('political-parties');case 2:politicalParties=_context.sent;return _context.abrupt(\"return\",politicalParties.data);case 4:case\"end\":return _context.stop();}}},_callee);}));function getAll(){return _getAll.apply(this,arguments);}return getAll;}()},{key:\"getByID\",value:function(){var _getByID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(politicalPartyID){var politicalParty;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return backendAPI.get(\"political-parties/\".concat(politicalPartyID));case 2:politicalParty=_context2.sent;return _context2.abrupt(\"return\",politicalParty.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function getByID(_x){return _getByID.apply(this,arguments);}return getByID;}()},{key:\"create\",value:function(){var _create=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(politicalPartyDTO){var newPoliticalParty;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return backendAPI.post('political-parties',politicalPartyDTO);case 2:newPoliticalParty=_context3.sent;return _context3.abrupt(\"return\",newPoliticalParty.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));function create(_x2){return _create.apply(this,arguments);}return create;}()},{key:\"updateByID\",value:function(){var _updateByID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(politicalPartyID,politicalPartyDTO){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return backendAPI.patch(\"political-parties/\".concat(politicalPartyID),politicalPartyDTO);case 2:case\"end\":return _context4.stop();}}},_callee4);}));function updateByID(_x3,_x4){return _updateByID.apply(this,arguments);}return updateByID;}()},{key:\"deleteByID\",value:function(){var _deleteByID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(politicalPartyID){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return backendAPI.delete(\"political-parties/\".concat(politicalPartyID));case 2:case\"end\":return _context5.stop();}}},_callee5);}));function deleteByID(_x5){return _deleteByID.apply(this,arguments);}return deleteByID;}()},{key:\"joinByID\",value:function(){var _joinByID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(politicalPartyID){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return backendAPI.post(\"political-parties/\".concat(politicalPartyID,\"/membership\"));case 2:case\"end\":return _context6.stop();}}},_callee6);}));function joinByID(_x6){return _joinByID.apply(this,arguments);}return joinByID;}()},{key:\"leaveByID\",value:function(){var _leaveByID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(politicalPartyID){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return backendAPI.delete(\"political-parties/\".concat(politicalPartyID,\"/membership\"));case 2:case\"end\":return _context7.stop();}}},_callee7);}));function leaveByID(_x7){return _leaveByID.apply(this,arguments);}return leaveByID;}()}]);return PoliticalPartyServiceImplementation;}();","map":{"version":3,"sources":["/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/services/political-party/PoliticalParty.ts"],"names":["backendAPI","PoliticalPartyServiceImplementation","get","politicalParties","data","politicalPartyID","politicalParty","politicalPartyDTO","post","newPoliticalParty","patch","delete"],"mappings":"+kBACA,OAAQA,UAAR,KAAyB,oBAAzB,CAOA,UAAaC,CAAAA,mCAAb,wRAGE,8KAEUD,CAAAA,UAAU,CAACE,GAAX,CAAe,mBAAf,CAFV,QACQC,gBADR,+CAGSA,gBAAgB,CAACC,IAH1B,wDAHF,mLASE,kBAAcC,gBAAd,gKAC8DL,CAAAA,UAAU,CAACE,GAAX,6BACrCG,gBADqC,EAD9D,QACQC,cADR,iDAISA,cAAc,CAACF,IAJxB,0DATF,sLAgBE,kBAAaG,iBAAb,mKAEUP,CAAAA,UAAU,CAACQ,IAAX,CAAgB,mBAAhB,CAAqCD,iBAArC,CAFV,QACQE,iBADR,iDAGSA,iBAAiB,CAACL,IAH3B,0DAhBF,4LAsBE,kBACEC,gBADF,CAEEE,iBAFF,6IAIQP,CAAAA,UAAU,CAACU,KAAX,6BACiBL,gBADjB,EAEJE,iBAFI,CAJR,yDAtBF,4MAgCE,kBAAiBF,gBAAjB,6IACQL,CAAAA,UAAU,CAACW,MAAX,6BAAuCN,gBAAvC,EADR,yDAhCF,oMAoCE,kBAAeA,gBAAf,6IACQL,CAAAA,UAAU,CAACQ,IAAX,6BAAqCH,gBAArC,gBADR,yDApCF,gMAwCE,kBAAgBA,gBAAhB,6IACQL,CAAAA,UAAU,CAACW,MAAX,6BAAuCN,gBAAvC,gBADR,yDAxCF","sourcesContent":["import {AxiosResponse} from 'axios';\nimport {backendAPI} from '@instinct-web/core';\nimport {PoliticalPartyService} from './PoliticalParty.types';\nimport {\n  PoliticalParty,\n  PoliticalPartyDTO,\n} from '@instinct-plugin/roleplay-types';\n\nexport class PoliticalPartyServiceImplementation\n  implements PoliticalPartyService\n{\n  async getAll() {\n    const politicalParties: AxiosResponse<PoliticalParty[]> =\n      await backendAPI.get('political-parties');\n    return politicalParties.data;\n  }\n\n  async getByID(politicalPartyID: number) {\n    const politicalParty: AxiosResponse<PoliticalParty> = await backendAPI.get(\n      `political-parties/${politicalPartyID}`\n    );\n    return politicalParty.data;\n  }\n\n  async create(politicalPartyDTO: PoliticalPartyDTO) {\n    const newPoliticalParty: AxiosResponse<PoliticalParty> =\n      await backendAPI.post('political-parties', politicalPartyDTO);\n    return newPoliticalParty.data;\n  }\n\n  async updateByID(\n    politicalPartyID: number,\n    politicalPartyDTO: PoliticalPartyDTO\n  ) {\n    await backendAPI.patch(\n      `political-parties/${politicalPartyID}`,\n      politicalPartyDTO\n    );\n  }\n\n  async deleteByID(politicalPartyID: number) {\n    await backendAPI.delete(`political-parties/${politicalPartyID}`);\n  }\n\n  async joinByID(politicalPartyID: number) {\n    await backendAPI.post(`political-parties/${politicalPartyID}/membership`);\n  }\n\n  async leaveByID(politicalPartyID: number) {\n    await backendAPI.delete(`political-parties/${politicalPartyID}/membership`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}