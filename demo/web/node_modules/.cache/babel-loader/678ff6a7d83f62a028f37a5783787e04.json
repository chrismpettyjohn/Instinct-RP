{"ast":null,"code":"import _slicedToArray from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link,useRoute}from'wouter';import ReactMarkdown from'react-markdown';import{Icon,setURL}from'@instinct-web/core';import{Row}from'../../components/generic/row/Row';import{UserLayout}from'../../components/layout/user';import{useFetchGuideByID}from'../../hooks/guide/fetch-guide-by-id';import{Container}from'../../components/generic/container/Container';import{MiniJumbotron}from'../../components/generic/mini-jumbotron/MiniJumbotron';setURL('guides/view/:guideID',/*#__PURE__*/React.createElement(GuideEdit,null));export function GuideEdit(){var _useRoute=useRoute('/guides/view/:guideID'),_useRoute2=_slicedToArray(_useRoute,2),matched=_useRoute2[0],params=_useRoute2[1];var guide=useFetchGuideByID(params.guideID);if(!guide){return null;}return/*#__PURE__*/React.createElement(UserLayout,null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(Link,{to:\"/guides\"},/*#__PURE__*/React.createElement(Icon,{className:\"fa-4x text-white\",style:{cursor:'pointer'},type:\"caret-left\"})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(MiniJumbotron,null,/*#__PURE__*/React.createElement(\"h1\",null,guide.name),/*#__PURE__*/React.createElement(\"p\",null,\"Made by\",' ',/*#__PURE__*/React.createElement(Link,{to:\"/profile/\".concat(guide.user.username)},guide.user.username))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(MiniJumbotron,null,/*#__PURE__*/React.createElement(ReactMarkdown,null,guide.content))))));}","map":{"version":3,"sources":["/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/pages/guides/GuideView.tsx"],"names":["React","Link","useRoute","ReactMarkdown","Icon","setURL","Row","UserLayout","useFetchGuideByID","Container","MiniJumbotron","GuideEdit","matched","params","guide","guideID","cursor","name","user","username","content"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,CAAcC,QAAd,KAA6B,QAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAAQC,IAAR,CAAcC,MAAd,KAA2B,oBAA3B,CACA,OAAQC,GAAR,KAAkB,kCAAlB,CACA,OAAQC,UAAR,KAAyB,8BAAzB,CACA,OAAQC,iBAAR,KAAgC,qCAAhC,CACA,OAAQC,SAAR,KAAwB,8CAAxB,CACA,OAAQC,aAAR,KAA4B,uDAA5B,CAEAL,MAAM,CAAC,sBAAD,cAAyB,oBAAC,SAAD,MAAzB,CAAN,CAEA,MAAO,SAASM,CAAAA,SAAT,EAAqB,CAC1B,cAA0BT,QAAQ,CAChC,uBADgC,CAAlC,wCAAOU,OAAP,eAAgBC,MAAhB,eAIA,GAAMC,CAAAA,KAAK,CAAGN,iBAAiB,CAACK,MAAM,CAAEE,OAAT,CAA/B,CAEA,GAAI,CAACD,KAAL,CAAY,CACV,MAAO,KAAP,CACD,CAED,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,mBACE,oBAAC,GAAD,mBACE,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,IAAD,EAAM,EAAE,CAAC,SAAT,eACE,oBAAC,IAAD,EACE,SAAS,CAAC,kBADZ,CAEE,KAAK,CAAE,CAACE,MAAM,CAAE,SAAT,CAFT,CAGE,IAAI,CAAC,YAHP,EADF,CADF,CADF,CADF,cAYE,oBAAC,GAAD,mBACE,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,aAAD,mBACE,8BAAKF,KAAK,CAACG,IAAX,CADF,cAEE,uCACU,GADV,cAEE,oBAAC,IAAD,EAAM,EAAE,oBAAcH,KAAK,CAACI,IAAN,CAAWC,QAAzB,CAAR,EACGL,KAAK,CAACI,IAAN,CAAWC,QADd,CAFF,CAFF,CADF,CADF,CAZF,cAyBE,oBAAC,GAAD,mBACE,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,aAAD,mBACE,oBAAC,aAAD,MAAgBL,KAAK,CAACM,OAAtB,CADF,CADF,CADF,CAzBF,CADF,CADF,CAqCD","sourcesContent":["import React from 'react';\nimport {Link, useRoute} from 'wouter';\nimport ReactMarkdown from 'react-markdown';\nimport {Icon, setURL} from '@instinct-web/core';\nimport {Row} from '../../components/generic/row/Row';\nimport {UserLayout} from '../../components/layout/user';\nimport {useFetchGuideByID} from '../../hooks/guide/fetch-guide-by-id';\nimport {Container} from '../../components/generic/container/Container';\nimport {MiniJumbotron} from '../../components/generic/mini-jumbotron/MiniJumbotron';\n\nsetURL('guides/view/:guideID', <GuideEdit />);\n\nexport function GuideEdit() {\n  const [matched, params] = useRoute<{guideID: string}>(\n    '/guides/view/:guideID'\n  );\n\n  const guide = useFetchGuideByID(params!.guideID);\n\n  if (!guide) {\n    return null;\n  }\n\n  return (\n    <UserLayout>\n      <Container>\n        <Row>\n          <div className=\"col-12\">\n            <Link to=\"/guides\">\n              <Icon\n                className=\"fa-4x text-white\"\n                style={{cursor: 'pointer'}}\n                type=\"caret-left\"\n              />\n            </Link>\n          </div>\n        </Row>\n        <Row>\n          <div className=\"col-12\">\n            <MiniJumbotron>\n              <h1>{guide.name}</h1>\n              <p>\n                Made by{' '}\n                <Link to={`/profile/${guide.user.username}`}>\n                  {guide.user.username}\n                </Link>\n              </p>\n            </MiniJumbotron>\n          </div>\n        </Row>\n        <Row>\n          <div className=\"col-12\">\n            <MiniJumbotron>\n              <ReactMarkdown>{guide.content}</ReactMarkdown>\n            </MiniJumbotron>\n          </div>\n        </Row>\n      </Container>\n    </UserLayout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}