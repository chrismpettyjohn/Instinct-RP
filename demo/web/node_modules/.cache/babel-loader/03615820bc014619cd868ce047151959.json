{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/pages/guides/GuideDirectory.tsx\";\nimport React, { useContext, useState } from 'react';\nimport { Row } from '../../components/generic/row/Row';\nimport { UserLayout } from '../../components/layout/user';\nimport { setURL, configContext, Icon, Input } from '@instinct-web/core';\nimport { Container } from '../../components/generic/container/Container';\nimport { MiniJumbotron } from '../../components/generic/mini-jumbotron/MiniJumbotron';\nimport { Link } from 'wouter';\nimport { RPPermissionGuard } from '../../components/templates/permission-guard';\nimport { useFetchAllGuides } from '../../hooks/guide/use-fetch-all-guides';\nimport { GuideCard } from '../../components/templates/guide-card/GuideCard';\nsetURL('guides', /*#__PURE__*/React.createElement(GuideDirectory, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 18\n  }\n}));\nexport function GuideDirectory() {\n  const {\n    config\n  } = useContext(configContext);\n  const [guideNameFilter, setGuideNameFilter] = useState('');\n  const guides = useFetchAllGuides();\n  const filteredGuides = guides === null || guides === void 0 ? void 0 : guides.filter(_ => _.name.toLowerCase().includes(guideNameFilter));\n  return /*#__PURE__*/React.createElement(UserLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MiniJumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, config.siteName, \" Guides\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }, \"Read guides posted by other users like yourself!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RPPermissionGuard, {\n    permission: \"websiteCreateGuides\",\n    redirect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/guides/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"plus-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), \"Create\")))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MiniJumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: guideNameFilter !== null && guideNameFilter !== void 0 ? guideNameFilter : '',\n    name: \"guide_filter\",\n    placeholder: \"Search by guide...\",\n    type: \"text\",\n    onChange: (key, value) => setGuideNameFilter(value.toLowerCase()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, filteredGuides === null || filteredGuides === void 0 ? void 0 : filteredGuides.map(_ => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    key: `guide_${_.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GuideCard, {\n    guide: _,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}