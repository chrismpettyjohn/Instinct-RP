{"ast":null,"code":"import { backendAPI } from '../../api';\n\nclass ForumServiceImplementation {\n  async createSection(newSectionDTO, sectionID) {\n    const newSection = await backendAPI.post(`forum/sections${sectionID ? '/' + sectionID : ''}`, newSectionDTO);\n    return newSection.data;\n  }\n\n  async getSections(parentSection) {\n    const sections = await backendAPI.get(`forum/sections${parentSection > -1 ? '/' + parentSection : ''}`);\n    return sections.data;\n  }\n\n  async getSectionByID(sectionID) {\n    const sections = await backendAPI.get(`forum/sections/${sectionID}`);\n    return sections.data;\n  }\n\n  async updateSection(sectionID, updateSectionDTO) {\n    await backendAPI.post(`forum/sections/${sectionID}`, updateSectionDTO);\n  }\n\n  async deleteSection(sectionID) {\n    await backendAPI.delete(`forum/sections/${sectionID}`);\n  }\n\n  async createPost(sectionID, newPostDTO) {\n    const newSection = await backendAPI.post(`forum/sections/${sectionID}/posts`, newPostDTO);\n    return newSection.data;\n  }\n\n  async getPosts(parentSection) {\n    const sections = await backendAPI.get(`forum/sections/${parentSection}/posts`);\n    return sections.data;\n  }\n\n  async getPostByID(parentSection, postID) {\n    const sections = await backendAPI.get(`forum/sections/${parentSection}/posts/${postID}`);\n    return sections.data;\n  }\n\n  async updatePost(sectionID, postID, updatePostDTO) {\n    await backendAPI.post(`forum/sections/${sectionID}/posts/{postID}`, updatePostDTO);\n  }\n\n  async deletePost(sectionID, postID) {\n    await backendAPI.delete(`forum/sections/${sectionID}/posts/${postID}`);\n  }\n\n}\n\nexport const forumService = new ForumServiceImplementation();","map":null,"metadata":{},"sourceType":"module"}