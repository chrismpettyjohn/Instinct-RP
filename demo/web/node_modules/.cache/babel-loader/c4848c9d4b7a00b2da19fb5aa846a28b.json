{"ast":null,"code":"import _regeneratorRuntime from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{backendAPI}from'@instinct-web/core';export var BusinessServiceImplementation=/*#__PURE__*/function(){function BusinessServiceImplementation(){_classCallCheck(this,BusinessServiceImplementation);}_createClass(BusinessServiceImplementation,[{key:\"create\",value:function(){var _create=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(businessDTO){var newBusiness;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return backendAPI.post('businesses',businessDTO);case 2:newBusiness=_context.sent;return _context.abrupt(\"return\",newBusiness.data);case 4:case\"end\":return _context.stop();}}},_callee);}));function create(_x){return _create.apply(this,arguments);}return create;}()},{key:\"getAll\",value:function(){var _getAll=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var businesses;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return backendAPI.get('businesses');case 2:businesses=_context2.sent;return _context2.abrupt(\"return\",businesses.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function getAll(){return _getAll.apply(this,arguments);}return getAll;}()},{key:\"getByID\",value:function(){var _getByID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(businessID){var business;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return backendAPI.get(\"businesses/\".concat(businessID));case 2:business=_context3.sent;return _context3.abrupt(\"return\",business.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));function getByID(_x2){return _getByID.apply(this,arguments);}return getByID;}()},{key:\"delete\",value:function(){var _delete2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(businessID){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return backendAPI.delete(\"businesses/\".concat(businessID));case 2:case\"end\":return _context4.stop();}}},_callee4);}));function _delete(_x3){return _delete2.apply(this,arguments);}return _delete;}()}]);return BusinessServiceImplementation;}();","map":{"version":3,"sources":["/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/services/business/Business.ts"],"names":["backendAPI","BusinessServiceImplementation","businessDTO","post","newBusiness","data","get","businesses","businessID","business","delete"],"mappings":"+kBACA,OAAQA,UAAR,KAAyB,oBAAzB,CAIA,UAAaC,CAAAA,6BAAb,sQACE,iBAAaC,WAAb,wJACqDF,CAAAA,UAAU,CAACG,IAAX,CACjD,YADiD,CAEjDD,WAFiD,CADrD,QACQE,WADR,+CAKSA,WAAW,CAACC,IALrB,wDADF,mLASE,8KACsDL,CAAAA,UAAU,CAACM,GAAX,CAClD,YADkD,CADtD,QACQC,UADR,iDAISA,UAAU,CAACF,IAJpB,0DATF,mLAgBE,kBAAcG,UAAd,0JACkDR,CAAAA,UAAU,CAACM,GAAX,sBAChCE,UADgC,EADlD,QACQC,QADR,iDAISA,QAAQ,CAACJ,IAJlB,0DAhBF,wLAuBE,kBAAaG,UAAb,6IACQR,CAAAA,UAAU,CAACU,MAAX,sBAAgCF,UAAhC,EADR,yDAvBF","sourcesContent":["import {AxiosResponse} from 'axios';\nimport {backendAPI} from '@instinct-web/core';\nimport {BusinessService} from './Business.types';\nimport {Business, BusinessDTO} from '@instinct-plugin/roleplay-types';\n\nexport class BusinessServiceImplementation implements BusinessService {\n  async create(businessDTO: BusinessDTO) {\n    const newBusiness: AxiosResponse<Business> = await backendAPI.post(\n      'businesses',\n      businessDTO\n    );\n    return newBusiness.data;\n  }\n\n  async getAll() {\n    const businesses: AxiosResponse<Business[]> = await backendAPI.get(\n      'businesses'\n    );\n    return businesses.data;\n  }\n\n  async getByID(businessID: string) {\n    const business: AxiosResponse<Business> = await backendAPI.get(\n      `businesses/${businessID}`\n    );\n    return business.data;\n  }\n\n  async delete(businessID: string) {\n    await backendAPI.delete(`businesses/${businessID}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}