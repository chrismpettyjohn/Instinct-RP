{"ast":null,"code":"import { visit } from './visit.js';\nexport * from './visit.js';\n\nconst remarkRewrite = handle => {\n  return transformer;\n\n  function transformer(tree) {\n    visit(tree, (node, index, parent) => {\n      if (handle && typeof handle === 'function') {\n        handle(node, index, parent);\n      }\n    });\n  }\n};\n\nexport default remarkRewrite;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAEA,SAAS,KAAT,QAAsB,YAAtB;AAEA,cAAc,YAAd;;AAIA,MAAM,aAAa,GAAqC,MAAD,IAAwB;AAC7E,SAAO,WAAP;;AACA,WAAS,WAAT,CAAqB,IAArB,EAAiD;AAC/C,IAAA,KAAK,CAAC,IAAD,EAAc,CAAC,IAAD,EAAyB,KAAzB,EAAwC,MAAxC,KAAoE;AACrF,UAAI,MAAM,IAAI,OAAO,MAAP,KAAkB,UAAhC,EAA4C;AAC1C,QAAA,MAAM,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CAAN;AACD;AACF,KAJI,CAAL;AAKD;AACF,CATD;;AAWA,eAAe,aAAf","sourceRoot":"","sourcesContent":["import { visit } from './visit.js';\nexport * from './visit.js';\nconst remarkRewrite = (handle) => {\n    return transformer;\n    function transformer(tree) {\n        visit(tree, (node, index, parent) => {\n            if (handle && typeof handle === 'function') {\n                handle(node, index, parent);\n            }\n        });\n    }\n};\nexport default remarkRewrite;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}