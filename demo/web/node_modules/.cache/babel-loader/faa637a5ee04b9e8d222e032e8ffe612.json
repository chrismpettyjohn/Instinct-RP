{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { EditorContext } from '../../Context';\nimport Child from './Child';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ToolbarItems(props) {\n  var prefixCls = props.prefixCls;\n\n  var _useContext = useContext(EditorContext),\n      fullscreen = _useContext.fullscreen,\n      preview = _useContext.preview,\n      _useContext$barPopup = _useContext.barPopup,\n      barPopup = _useContext$barPopup === void 0 ? {} : _useContext$barPopup,\n      commandOrchestrator = _useContext.commandOrchestrator,\n      dispatch = _useContext.dispatch;\n\n  function handleClick(command, name) {\n    if (!dispatch) return;\n    var state = {\n      barPopup: _extends({}, barPopup)\n    };\n\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value;\n    }\n\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach(function (item) {\n        if (name === item.groupName) {\n          state.barPopup[name] = true;\n        } else if (item.keyCommand) {\n          state.barPopup[item.groupName] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach(function (keyName) {\n        state.barPopup[keyName] = false;\n      });\n    }\n\n    if (Object.keys(state).length) {\n      dispatch(_extends({}, state));\n    }\n\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n\n  useEffect(function () {\n    if (document) {\n      document.body.style.overflow = !fullscreen ? 'initial' : 'hidden';\n    }\n  }, [fullscreen]);\n  return /*#__PURE__*/_jsx(\"ul\", {\n    children: (props.commands || []).map(function (item, idx) {\n      if (item.keyCommand === 'divider') {\n        return /*#__PURE__*/_jsx(\"li\", _extends({}, item.liProps, {\n          className: prefixCls + \"-toolbar-divider\"\n        }), idx);\n      }\n\n      if (!item.keyCommand) return /*#__PURE__*/_jsx(Fragment, {});\n      var activeBtn = fullscreen && item.keyCommand === 'fullscreen' || item.keyCommand === 'preview' && preview === item.value;\n      var childNode = item.children && typeof item.children === 'function' ? item.children({\n        getState: function getState() {\n          return commandOrchestrator.getState();\n        },\n        textApi: commandOrchestrator ? commandOrchestrator.textApi : undefined,\n        close: function close() {\n          return handleClick({}, item.groupName);\n        },\n        execute: function execute() {\n          return handleClick({\n            execute: item.execute\n          });\n        }\n      }) : undefined;\n      var disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n      return /*#__PURE__*/_jsxs(\"li\", _extends({}, item.liProps, {\n        className: activeBtn ? \"active\" : '',\n        children: [!item.buttonProps && item.icon, item.buttonProps && /*#__PURE__*/React.createElement('button', _extends({\n          type: 'button',\n          disabled: disabled,\n          'data-name': item.name\n        }, item.buttonProps, {\n          onClick: function onClick(evn) {\n            evn.stopPropagation();\n            handleClick(item, item.groupName);\n          }\n        }), item.icon), item.children && /*#__PURE__*/_jsx(Child, {\n          groupName: item.groupName,\n          prefixCls: prefixCls,\n          children: childNode,\n          commands: Array.isArray(item.children) ? item.children : undefined\n        })]\n      }), idx);\n    })\n  });\n}\nexport default function Toolbar(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      prefixCls = _props.prefixCls,\n      _props$height = _props.height,\n      height = _props$height === void 0 ? 29 : _props$height,\n      isChild = _props.isChild;\n\n  var _useContext2 = useContext(EditorContext),\n      commands = _useContext2.commands,\n      extraCommands = _useContext2.extraCommands;\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: prefixCls + \"-toolbar\",\n    style: {\n      height: height\n    },\n    children: [/*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: props.commands || commands || []\n    })), !isChild && /*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: extraCommands || []\n    }))]\n  });\n}","map":{"version":3,"sources":["../../../src/components/Toolbar/index.tsx"],"names":["prefixCls","props","fullscreen","preview","barPopup","commandOrchestrator","dispatch","useContext","state","command","name","item","Object","useEffect","document","activeBtn","childNode","getState","textApi","close","handleClick","execute","disabled","type","onClick","evn","Array","undefined","height","isChild","commands","extraCommands"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { IProps } from '../../utils';\nimport { EditorContext, PreviewType, ContextStore } from '../../Context';\nimport { ICommand } from '../../commands';\nimport Child from './Child';\nimport './index.less';\n\nexport interface IToolbarProps extends IProps {\n  height?: React.CSSProperties['height'];\n  onCommand?: (command: ICommand<string>, groupName?: string) => void;\n  commands?: ICommand<string>[];\n  isChild?: boolean;\n}\n\nexport function ToolbarItems(props: IToolbarProps) {\n  const { prefixCls } = props;\n  const { fullscreen, preview, barPopup = {}, commandOrchestrator, dispatch } = useContext(EditorContext);\n  function handleClick(command: ICommand<string>, name?: string) {\n    if (!dispatch) return;\n    const state: ContextStore = { barPopup: { ...barPopup } };\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value as PreviewType;\n    }\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach((item) => {\n        if (name === item.groupName) {\n          state.barPopup![name!] = true;\n        } else if (item.keyCommand) {\n          state.barPopup![item.groupName!] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach((keyName) => {\n        state.barPopup![keyName] = false;\n      });\n    }\n\n    if (Object.keys(state).length) {\n      dispatch({ ...state });\n    }\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n\n  useEffect(() => {\n    if (document) {\n      document.body.style.overflow = !fullscreen ? 'initial' : 'hidden';\n    }\n  }, [fullscreen]);\n\n  return (\n    <ul>\n      {(props.commands || []).map((item, idx) => {\n        if (item.keyCommand === 'divider') {\n          return <li key={idx} {...item.liProps} className={`${prefixCls}-toolbar-divider`} />;\n        }\n        if (!item.keyCommand) return <Fragment />;\n        const activeBtn =\n          (fullscreen && item.keyCommand === 'fullscreen') || (item.keyCommand === 'preview' && preview === item.value);\n        const childNode =\n          item.children && typeof item.children === 'function'\n            ? item.children({\n                getState: () => commandOrchestrator!.getState(),\n                textApi: commandOrchestrator ? commandOrchestrator!.textApi : undefined,\n                close: () => handleClick({}, item.groupName),\n                execute: () => handleClick({ execute: item.execute }),\n              })\n            : undefined;\n        const disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n        return (\n          <li key={idx} {...item.liProps} className={activeBtn ? `active` : ''}>\n            {!item.buttonProps && item.icon}\n            {item.buttonProps &&\n              React.createElement(\n                'button',\n                {\n                  type: 'button',\n                  disabled,\n                  'data-name': item.name,\n                  ...item.buttonProps,\n                  onClick: (evn: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                    evn.stopPropagation();\n                    handleClick(item, item.groupName);\n                  },\n                },\n                item.icon,\n              )}\n            {item.children && (\n              <Child\n                groupName={item.groupName}\n                prefixCls={prefixCls}\n                children={childNode}\n                commands={Array.isArray(item.children) ? item.children : undefined}\n              />\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default function Toolbar(props: IToolbarProps = {}) {\n  const { prefixCls, height = 29, isChild } = props;\n  const { commands, extraCommands } = useContext(EditorContext);\n  return (\n    <div className={`${prefixCls}-toolbar`} style={{ height }}>\n      <ToolbarItems {...props} commands={props.commands || commands || []} />\n      {!isChild && <ToolbarItems {...props} commands={extraCommands || []} />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}