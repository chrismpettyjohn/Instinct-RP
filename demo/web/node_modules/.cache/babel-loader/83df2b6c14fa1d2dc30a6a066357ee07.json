{"ast":null,"code":"import _regeneratorRuntime from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/chris/Projects/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormGroup}from'reactstrap';import{toast}from'react-toastify';import React,{useState}from'react';import MDEditor from'@uiw/react-md-editor';import{Icon,Input}from'@instinct-web/core';import{RPPermissionGuard}from'../../../components/templates/permission-guard';export function GuideEditor(_ref){var _baseGuideDTO$name,_baseGuideDTO$content,_baseGuideDTO$categor;var baseGuideDTO=_ref.baseGuideDTO,onSubmit=_ref.onSubmit;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),spinner=_useState2[0],setSpinner=_useState2[1];var _useState3=useState({name:(_baseGuideDTO$name=baseGuideDTO===null||baseGuideDTO===void 0?void 0:baseGuideDTO.name)!==null&&_baseGuideDTO$name!==void 0?_baseGuideDTO$name:'',content:(_baseGuideDTO$content=baseGuideDTO===null||baseGuideDTO===void 0?void 0:baseGuideDTO.content)!==null&&_baseGuideDTO$content!==void 0?_baseGuideDTO$content:'',categoryID:(_baseGuideDTO$categor=baseGuideDTO===null||baseGuideDTO===void 0?void 0:baseGuideDTO.categoryID)!==null&&_baseGuideDTO$categor!==void 0?_baseGuideDTO$categor:1}),_useState4=_slicedToArray(_useState3,2),guideDTO=_useState4[0],setGuideDTO=_useState4[1];function updateGuide(key,value){setGuideDTO(function(_){return _objectSpread(_objectSpread({},_),{},_defineProperty({},key,value));});}function onConfirmSubmit(){return _onConfirmSubmit.apply(this,arguments);}function _onConfirmSubmit(){_onConfirmSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setSpinner(true);_context.next=4;return onSubmit(guideDTO);case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);toast.error('There was a problem updating your guide');case 9:_context.prev=9;setSpinner(false);return _context.finish(9);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,6,9,12]]);}));return _onConfirmSubmit.apply(this,arguments);}var _ref2=spinner?['spinner fa-spin','Saving Guide...']:['savde','Save Guide'],_ref3=_slicedToArray(_ref2,2),buttonIcon=_ref3[0],buttonText=_ref3[1];return/*#__PURE__*/React.createElement(RPPermissionGuard,{permission:\"websiteCreateGuides\"},/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Guide Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"name\",onChange:updateGuide,value:guideDTO.name})),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Guide Content\"),/*#__PURE__*/React.createElement(MDEditor,{value:guideDTO.content,onChange:function onChange(content){return updateGuide('content',content);}})),/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-4 text-right\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-outline-success ml-2\",disabled:spinner,onClick:onConfirmSubmit},/*#__PURE__*/React.createElement(Icon,{type:buttonIcon}),buttonText)));}","map":{"version":3,"sources":["/Users/chris/Projects/instinct/packages/@instinct-theme/roleplay/src/pages/guides/guide-editor/GuideEditor.tsx"],"names":["FormGroup","toast","React","useState","MDEditor","Icon","Input","RPPermissionGuard","GuideEditor","baseGuideDTO","onSubmit","spinner","setSpinner","name","content","categoryID","guideDTO","setGuideDTO","updateGuide","key","value","_","onConfirmSubmit","error","buttonIcon","buttonText"],"mappings":"uuBAAA,OAAQA,SAAR,KAAwB,YAAxB,CACA,OAAQC,KAAR,KAAoB,gBAApB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,OAAQC,IAAR,CAAcC,KAAd,KAA0B,oBAA1B,CAGA,OAAQC,iBAAR,KAAgC,gDAAhC,CAEA,MAAO,SAASC,CAAAA,WAAT,MAAiE,uEAA3CC,CAAAA,YAA2C,MAA3CA,YAA2C,CAA7BC,QAA6B,MAA7BA,QAA6B,CACtE,cAA8BP,QAAQ,CAAC,KAAD,CAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eACA,eAAgCT,QAAQ,CAAW,CACjDU,IAAI,qBAAEJ,YAAF,SAAEA,YAAF,iBAAEA,YAAY,CAAEI,IAAhB,yDAAwB,EADqB,CAEjDC,OAAO,wBAAEL,YAAF,SAAEA,YAAF,iBAAEA,YAAY,CAAEK,OAAhB,+DAA2B,EAFe,CAGjDC,UAAU,wBAAEN,YAAF,SAAEA,YAAF,iBAAEA,YAAY,CAAEM,UAAhB,+DAA8B,CAHS,CAAX,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAMA,QAASC,CAAAA,WAAT,CACEC,GADF,CAEEC,KAFF,CAGQ,CACNH,WAAW,CAAC,SAAAI,CAAC,wCACRA,CADQ,wBAEVF,GAFU,CAEJC,KAFI,IAAF,CAAX,CAID,CAhBqE,QAkBvDE,CAAAA,eAlBuD,uJAkBtE,mJAEIV,UAAU,CAAC,IAAD,CAAV,CAFJ,sBAGUF,CAAAA,QAAQ,CAACM,QAAD,CAHlB,sFAKIf,KAAK,CAACsB,KAAN,CAAY,yCAAZ,EALJ,uBAOIX,UAAU,CAAC,KAAD,CAAV,CAPJ,mGAlBsE,kDA6BtE,UAAiCD,OAAO,CACpC,CAAC,iBAAD,CAAoB,iBAApB,CADoC,CAEpC,CAAC,OAAD,CAAU,YAAV,CAFJ,+BAAOa,UAAP,UAAmBC,UAAnB,UAIA,mBACE,oBAAC,iBAAD,EAAmB,UAAU,CAAC,qBAA9B,eACE,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,eACE,2CADF,cAEE,oBAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,MAFP,CAGE,QAAQ,CAAEP,WAHZ,CAIE,KAAK,CAAEF,QAAQ,CAACH,IAJlB,EAFF,CADF,cAUE,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,eACE,8CADF,cAEE,oBAAC,QAAD,EACE,KAAK,CAAEG,QAAQ,CAACF,OADlB,CAEE,QAAQ,CAAE,kBAACA,OAAD,QAAkBI,CAAAA,WAAW,CAAC,SAAD,CAAYJ,OAAZ,CAA7B,EAFZ,EAFF,CAVF,cAiBE,oBAAC,SAAD,EAAW,SAAS,CAAC,iBAArB,eACE,8BACE,SAAS,CAAC,8BADZ,CAEE,QAAQ,CAAEH,OAFZ,CAGE,OAAO,CAAEW,eAHX,eAKE,oBAAC,IAAD,EAAM,IAAI,CAAEE,UAAZ,EALF,CAMGC,UANH,CADF,CAjBF,CADF,CA8BD","sourcesContent":["import {FormGroup} from 'reactstrap';\nimport {toast} from 'react-toastify';\nimport React, {useState} from 'react';\nimport MDEditor from '@uiw/react-md-editor';\nimport {Icon, Input} from '@instinct-web/core';\nimport {GuideEditorProps} from './GuideEditor.types';\nimport {GuideDTO} from '@instinct-plugin/roleplay-types';\nimport {RPPermissionGuard} from '../../../components/templates/permission-guard';\n\nexport function GuideEditor({baseGuideDTO, onSubmit}: GuideEditorProps) {\n  const [spinner, setSpinner] = useState(false);\n  const [guideDTO, setGuideDTO] = useState<GuideDTO>({\n    name: baseGuideDTO?.name ?? '',\n    content: baseGuideDTO?.content ?? '',\n    categoryID: baseGuideDTO?.categoryID ?? 1,\n  });\n\n  function updateGuide<K extends keyof GuideDTO>(\n    key: K,\n    value: GuideDTO[K]\n  ): void {\n    setGuideDTO(_ => ({\n      ..._,\n      [key]: value,\n    }));\n  }\n\n  async function onConfirmSubmit() {\n    try {\n      setSpinner(true);\n      await onSubmit(guideDTO);\n    } catch {\n      toast.error('There was a problem updating your guide');\n    } finally {\n      setSpinner(false);\n    }\n  }\n\n  const [buttonIcon, buttonText] = spinner\n    ? ['spinner fa-spin', 'Saving Guide...']\n    : ['savde', 'Save Guide'];\n\n  return (\n    <RPPermissionGuard permission=\"websiteCreateGuides\">\n      <FormGroup className=\"mb-4\">\n        <h4>Guide Name</h4>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={updateGuide}\n          value={guideDTO.name}\n        />\n      </FormGroup>\n      <FormGroup className=\"mb-4\">\n        <h4>Guide Content</h4>\n        <MDEditor\n          value={guideDTO.content}\n          onChange={(content: any) => updateGuide('content', content)}\n        />\n      </FormGroup>\n      <FormGroup className=\"mb-4 text-right\">\n        <button\n          className=\"btn btn-outline-success ml-2\"\n          disabled={spinner}\n          onClick={onConfirmSubmit}\n        >\n          <Icon type={buttonIcon} />\n          {buttonText}\n        </button>\n      </FormGroup>\n    </RPPermissionGuard>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}