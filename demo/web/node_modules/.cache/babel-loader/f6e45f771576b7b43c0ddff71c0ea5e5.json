{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useContext, useMemo } from 'react';\nimport \"./Child.css\";\nimport Toolbar from './';\nimport { EditorContext } from '../../Context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Child(props) {\n  var _ref = props || {},\n      prefixCls = _ref.prefixCls,\n      groupName = _ref.groupName,\n      commands = _ref.commands,\n      children = _ref.children;\n\n  var _useContext = useContext(EditorContext),\n      _useContext$barPopup = _useContext.barPopup,\n      barPopup = _useContext$barPopup === void 0 ? {} : _useContext$barPopup;\n\n  return useMemo(function () {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: prefixCls + \"-toolbar-child \" + (groupName && barPopup[groupName] ? 'active' : ''),\n      onClick: function onClick(e) {\n        return e.stopPropagation();\n      },\n      children: Array.isArray(commands) ? /*#__PURE__*/_jsx(Toolbar, _extends({\n        commands: commands\n      }, props, {\n        height: \"\",\n        isChild: true\n      })) : children\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [commands, barPopup, groupName, prefixCls]);\n}","map":{"version":3,"sources":["../../../src/components/Toolbar/Child.tsx"],"names":["prefixCls","groupName","commands","children","props","barPopup","useContext","useMemo","e"],"mappings":";AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,OAAA,QAAA,OAAA;AACA,OAAA,aAAA;AACA,OAAA,OAAA,MAAA,IAAA;AACA,SAAA,aAAA,QAAA,eAAA;;AAOA,eAAe,SAAA,KAAA,CAAA,KAAA,EAAkC;AAC/C,MAAA,IAAA,GAAqDI,KAAK,IAA1D,EAAA;AAAA,MAAQJ,SAAR,GAAA,IAAA,CAAA,SAAA;AAAA,MAAmBC,SAAnB,GAAA,IAAA,CAAA,SAAA;AAAA,MAA8BC,QAA9B,GAAA,IAAA,CAAA,QAAA;AAAA,MAAwCC,QAAxC,GAAA,IAAA,CAAA,QAAA;;AACA,MAAA,WAAA,GAA0BG,UAAU,CAApC,aAAoC,CAApC;AAAA,MAAA,oBAAA,GAAA,WAAA,CAAA,QAAA;AAAA,MAAQD,QAAR,GAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,oBAAA;;AACA,SAAOE,OAAO,CACZ,YAAA;AAAA,WAAA,aACE,IAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EAAKP,SAAL,GAAA,iBAAKA,IAA2BC,SAAS,IAAII,QAAQ,CAArBJ,SAAqB,CAArBA,GAAAA,QAAAA,GAD3C,EACgBD,CADhB;AAEE,MAAA,OAAO,EAAE,SAAA,OAAA,CAAA,CAAA,EAAA;AAAA,eAAOQ,CAAC,CAAR,eAAOA,EAAP;AAFX,OAAA;AAAA,MAAA,QAAA,EAIG,KAAK,CAAL,OAAA,CAAA,QAAA,IAAA,aAA0B,IAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AAAS,QAAA,QAAQ,EAAEN;AAAnB,OAAA,EAAA,KAAA,EAAA;AAAwC,QAAA,MAAM,EAA9C,EAAA;AAAkD,QAAA,OAAO,EAAA;AAAzD,OAAA,CAAA,CAA1B,GAAyFC;AAJ5F,KAAA,CADF;AADY,GAAA,EASZ;AACA,GAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAVF,SAUE,CAVY,CAAd;AAYD","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport './Child.less';\nimport Toolbar, { IToolbarProps } from './';\nimport { EditorContext } from '../../Context';\n\nexport type ChildProps = IToolbarProps & {\n  children?: JSX.Element;\n  groupName?: string;\n};\n\nexport default function Child(props: ChildProps) {\n  const { prefixCls, groupName, commands, children } = props || {};\n  const { barPopup = {} } = useContext(EditorContext);\n  return useMemo(\n    () => (\n      <div\n        className={`${prefixCls}-toolbar-child ${groupName && barPopup[groupName] ? 'active' : ''}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {Array.isArray(commands) ? <Toolbar commands={commands} {...props} height=\"\" isChild /> : children}\n      </div>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [commands, barPopup, groupName, prefixCls],\n  );\n}\n"]},"metadata":{},"sourceType":"module"}