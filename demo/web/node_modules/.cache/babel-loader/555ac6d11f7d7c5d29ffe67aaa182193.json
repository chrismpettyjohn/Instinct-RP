{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Projects/instinct/packages/@instinct-web/core/src/components/utility/bootstrap/Bootstrap.tsx\";\nimport { Router } from '../router';\nimport { DataPolling } from '../data-polling';\nimport { ToastContainer } from 'react-toastify';\nimport { BannedGuard } from '../../guard/banned';\nimport { useBanListener } from '../../../hooks/user';\nimport { SkeletonTheme } from 'react-loading-skeleton';\nimport { configContext } from '../../../context/config';\nimport { healthContext } from '../../../context/health';\nimport { configService } from '../../../services/config';\nimport { sessionContext } from '../../../context/session';\nimport { sessionService } from '../../../services/session';\nimport { RenderError } from '../../generic/error/RenderError';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { StripeProvider } from '../stripe-provider/StripeProvider';\nimport { ServerMaintenanceGuard } from '../../guard/server-maintenance';\nimport { Icon } from '../../generic/icon';\nexport function Bootstrap() {\n  useBanListener();\n  const [ready, setReady] = useState(false);\n  const [failedToLaunch, setFailedToLaunch] = useState(false);\n  const {\n    setConfig\n  } = useContext(configContext);\n  const {\n    setHealth\n  } = useContext(healthContext);\n  const {\n    setUser\n  } = useContext(sessionContext);\n  useEffect(() => {\n    async function init() {\n      try {\n        const [user, config, health] = await Promise.all([sessionService.init(), configService.getConfig(), configService.getHealth()]);\n        setUser(user);\n        setConfig(config);\n        setHealth(health);\n        setReady(true);\n      } catch {\n        setReady(true);\n        setFailedToLaunch(true);\n      }\n    }\n\n    init();\n  }, []);\n\n  if (!ready) {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-spin fa-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (failedToLaunch) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-danger text-uppercase\",\n      style: {\n        marginTop: '15%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: \"exclamation-triangle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), \"Failed to Launch\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"There was a problem.  Please try again later.\"));\n  }\n\n  try {\n    return /*#__PURE__*/React.createElement(React.StrictMode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SkeletonTheme, {\n      color: \"#0f416d\",\n      highlightColor: \"#1a4d6e\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ServerMaintenanceGuard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BannedGuard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StripeProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        minHeight: '100%',\n        minWidth: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(DataPolling, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    })))))));\n  } catch {\n    return /*#__PURE__*/React.createElement(RenderError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}